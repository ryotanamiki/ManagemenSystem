<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <title>ManagementSystem</title>

</head>

<body>
    <table>
        <thead>
            <tr>
                <th>id</th>
                <th>name</th>
                <th>kana_name</th>
                <th>gender</th>
                <th>email</th>
                <th>phone</th>
                <th>address</th>
                <th>workplace</th>
                <th>household</th>
            </tr>
        </thead>
        <tbody>
            <% for (let i=0; i < users.length; i++) { %>
                <tr>
                    <td>
                        <%= users[i].id %>
                            </td>
                            <td>
                        <%= users[i].name %>
                    </td>
                    <td>
                        <%= users[i].kana_name %>
                            </td>
                            <td>
                                <%= users[i].gender %>
                            </td>
                            <td>
                        <%= users[i].email %>
                    </td>
                    <td>
                        <%= users[i].phone %>
                    </td>
                    <td>
                        <%= users[i].address %>
                    </td>
                    <td>
                        <%= users[i].workplace %>
                    </td>
                    <td>
                        <%= users[i].household %>
                    </td>
                    <td><a href="/edit/<%= users[i].id %>">更新</a></td>
                    <td><a href="/delete/<%= users[i].id %>">削除</a></td>
                    <td><button class="select-button">選択</button></td>
                </tr>
                <% } %>
        </tbody>
    </table>

    <p><a href="/create">ユーザーの追加</a></p>

    <form id="filterForm">
        <input type="text" id="filterText" placeholder="名前を入力">
        <button type="button" id="filterButton">絞り込む</button>
    </form>
<button id="genderStatus">性別統計</button>
<button id="workplaceStatus">職場統計</button>
<button id="householdStatus">世帯人数統計</button>
<div id="resultStatus"></div>

    <div id="remove">
        <h3>選択した情報一覧</h3>
        <ul id="selectedList"></ul>
    </div>

<script>
    let users = JSON.parse('<%= JSON.stringify(users) %>'.replace(/&#34;/g, '"'));
    function getUserInfo() {
        let userName = document.getElementById('userName').value;
        let user = users.find(user => user.id.toString() === userName);

        if (user) {
            let userInformation = document.getElementById('userInfo');
            userInformation.innerHTML = `
    <p>Name: ${user.name}</p>
    <p>Email: ${user.email}</p>
    `;
        } else {
            let userInformation = document.getElementById('userInfo');
            userInformation.innerHTML = `
    <p>Not found.</p>
    `;
        }
    }
                                                /*------------情報絞り込み機能------------*/
    const filterText = document.querySelector('#filterText');
    const filterButton = document.querySelector('#filterButton');
    const tableRows = document.querySelectorAll('tbody tr');

    function filterRows(keyword) {
        tableRows.forEach((row) => {
            const nameCell = row.querySelector('td:nth-child(2)');
            if (nameCell) {
                const name = nameCell.textContent.toLowerCase();
                if (name.includes(keyword)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            }
        });
    }

    filterButton.addEventListener('click', () => {
        const keyword = filterText.value.trim().toLowerCase();
        filterRows(keyword);
    });

    filterText.addEventListener('input', () => {
    });
    /*------------情報を格納する機能-----------*/
    const selectedInfo = [];

    function buttonClick(event) {
        const selected = event.target.closest('tr');
        if (selected) {
            const userId = selected.querySelector('td:first-child').textContent;
            const userInfo = users.find(user => user.id === parseInt(userId));

        if (userInfo) {
            selectedInfo.push(userInfo);
            const selectedList = document.querySelector('#selectedList');
            const listitem = document.createElement('li');
            listitem.textContent =
                `ID: ${userInfo.id}, 名前: ${userInfo.name}, カナ: ${userInfo.kana_name}, gender: ${userInfo.gender}, email: ${userInfo.email}, phone: ${userInfo.phone}, address: ${userInfo.address}, workspace: ${userInfo.workplace}, household: ${userInfo.household}`;
            selectedList.appendChild(listitem);
            selected.remove();
        }
    }
}
    const selectedButtons = document.querySelectorAll('.select-button');

    selectedButtons.forEach(button => {
        button.addEventListener('click', buttonClick);
    });
    /*------------各項目内容を統計する機能-----------*/
    // ボタンをクリックしたときの処理
    document.getElementById('genderStatus').addEventListener('click', calculateGenderStats);
    document.getElementById('workplaceStatus').addEventListener('click', calculateWorkplaceStats);
    document.getElementById('householdStatus').addEventListener('click', calculateHouseholdStats);

    function calculateGenderStats() {
        const maleCount = users.filter(user => user.gender === '男性').length;
        const femaleCount = users.filter(user => user.gender === '女性').length;
        displayStatistics(`男性: ${maleCount} 人, 女性: ${femaleCount} 人`);
    }

    function calculateWorkplaceStats() {
        const workplaceStats = {};
        users.forEach(user => {
            const workplace = user.workplace;
            if (workplace in workplaceStats) {
                workplaceStats[workplace]++;
            } else {
                workplaceStats[workplace] = 1;
            }
        });
        displayStatistics('職場統計', workplaceStats);
    }

    function calculateHouseholdStats() {
        const householdStats = {};
        users.forEach(user => {
            const household = user.household;
            if (household in householdStats) {
                householdStats[household]++;
            } else {
                householdStats[household] = 1;
            }
        });
        displayStatistics('世帯統計', householdStats);
    }
    function displayStatistics(title, data) {
        const statisticsResults = document.getElementById('resultStatus');
        statisticsResults.innerHTML = `<h3>${title}</h3>`;
        if (data) {
            for (const key in data) {
                statisticsResults.innerHTML += `<p>${key}: ${data[key]} 人</p>`;
            }
        }
    }

</script>
</body>

</html>